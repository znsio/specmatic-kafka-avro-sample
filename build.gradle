plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.plugin.spring' version '2.1.0'
    id 'jacoco'
    id("com.github.davidmc24.gradle.plugin.avro") version "1.9.1"
}

group = 'io.specmatic'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        url uri("lib")
    }
    maven {
        url "https://packages.confluent.io/maven/"
    }
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter')
    implementation 'org.springframework.kafka:spring-kafka:3.3.7'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.16.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.16.0'

    implementation("io.confluent:kafka-avro-serializer:7.9.0")
    implementation("org.apache.avro:avro:1.12.0")
    implementation("io.confluent:kafka-schema-registry-client:7.9.0")

    testImplementation platform('org.junit:junit-bom:5.13.4')
    testImplementation("io.specmatic.async:specmatic-kafka:1.0.2")
    testImplementation("org.testcontainers:testcontainers:1.19.3")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}

test {
    useJUnitPlatform()
}

avro {
    setCreateSetters(true)
    fieldVisibility.set("PRIVATE")
    outputCharacterEncoding.set("UTF-8")
}

sourceSets {
    main {
        java.srcDirs("build/generated-main-avro-java")
    }
}

tasks.withType(JavaCompile).configureEach {
    dependsOn 'generateAvroJava'
}

configurations.all {
    exclude group: 'ch.qos.logback', module: 'logback-classic'
}
