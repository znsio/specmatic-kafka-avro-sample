services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - avro-app-network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - /var/lib/zookeeper

  broker:
    image: confluentinc/cp-kafka:latest
    hostname: broker
    container_name: broker
    networks:
      - avro-app-network
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: CONTROLLER://:9091,EXTERNAL://:9092,INTERNAL://:9093
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL://localhost:9092,INTERNAL://broker:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      CLUSTER_ID: v1-12345678-1234-1234-1234-123456789abc
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper

  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - broker
    networks:
      - avro-app-network
    volumes:
      - ./create-topics.sh:/create-topics.sh
    entrypoint: [ "sh", "/create-topics.sh" ]

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    networks:
      - avro-app-network
    ports:
      - "8085:8085"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:9093
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8085
      SCHEMA_REGISTRY_AUTO_REGISTER_SCHEMAS: true

  register-schemas:
    image: curlimages/curl:8.15.0
    depends_on:
      - schema-registry
    networks:
      - avro-app-network
    user: root
    entrypoint: sh
    command:
      - -c
      - |
        apk add --no-cache jq && \
        chmod +x /usr/src/app/schemas/register-schemas.sh && \
        sh -c /usr/src/app/schemas/register-schemas.sh
    volumes:
      - ./src/test/avro:/usr/src/app/schemas

networks:
  avro-app-network:
    name: avro-app-network
    driver: bridge